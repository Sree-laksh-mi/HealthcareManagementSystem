@model HealthcareManagementSystem.Models.Member


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form align-items-center">
        <h4>Add New Member</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Department)
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Age)
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Gender)
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                {
                    new SelectListItem{Text="Male",Value="Male"},
                    new SelectListItem{Text="Female",Value="Female"},
                    new SelectListItem{Text="Other",Value="Other"}
                }, "Select Gender", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-8">
                @Html.LabelFor(model => model.Address)
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control",@placeholder="Address Here" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Mother)
                @Html.EditorFor(model => model.Mother, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mother, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Father)
                @Html.EditorFor(model => model.Father, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Father, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Spouse)
                @Html.EditorFor(model => model.Spouse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Spouse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Child1)
                    @Html.EditorFor(model => model.Child1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Child1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Child2)
                    @Html.EditorFor(model => model.Child2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Child2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Type)
                    @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
                    {
                        new SelectListItem{Text="Employee",Value="Employee"},
                        new SelectListItem{Text="Student",Value="Student"},
                    }, "Select Category", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Add" class="btn btn-info col-md-4" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
